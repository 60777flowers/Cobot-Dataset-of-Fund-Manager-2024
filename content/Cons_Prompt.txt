假设进行量化交易，利用聚宽平台进行策略开发与回测，利用QMT进行实盘交易

本次测试以量化交易中常见的短线交易策略，即首板低开策略为案例，测试LLM作为策略构建者、策略制定者的能力。

策略的核心逻辑是选取“低位，非连板，涨停后次日低开”的股票，开盘买入，第二日上午如果有盈利就卖出，没有就拿到尾盘，无论盈利与否当日平仓。

过程中涉及的监管规定：A股交易实行T+1交易

Problem1：

请你按照要求实现python函数:
	运行环境：在JoinQuant平台回测环境下运行
	具体功能: 1.获取股票池，即沪深300非停牌股票
			    2.实现股票筛选：条件：前一日涨停；非连板涨停
			    3.将筛选后股票代码存储与列表Stock_Pool中并返回


Problem2（7.5min）：

请你阅读JoinQuant API Document，并按照要求实现python代码，能够在JoinQuant平台实现给定策略并完成回测：

	运行环境:在JoinQuant平台回测环境下运行
	具体功能:
			初始化：实现每日量化交易，早上9.30买入“低位，非连板，涨停后次日低开”的股票，第二日11.28上午如果有盈利就卖出，没有就拿到尾盘，无论盈利与否第二日14.50平仓。
			对于沪深300股票池选股前进行st，次新股基本过滤，然后筛选出昨日首板股票，即前一日涨停；非连板涨停。
			计算出股票的相对位置，并筛选处于相对低位的股票（小于60天内收盘价均值，即计算相对位置 rpd = get_relative_position_df(stock_list, date, 60)  rpd = rpd[rpd['rp'] <= 0.5]）
			实现购买与卖出函数，在经过以上多次筛选的股票池中挑选低开股票（价格为前一日收盘价的0.96-0.97之间），按照平均的原则（将资金平均分配与每一股票）进行全仓与平仓。

	请注意：
			你的实现中需遵循模块化编程的方法，将不同功能有效规划为函数实现，请选择最有效的实现结构，无需按照prompt顺序编程
			你可以尝试先将任务拆解并写出伪代码，再通过函数逐步实现
			请注意按照api文档检查函数使用的正确性以及数据，日期，时间的使用正确性
			请给出有效的代码注释，便于下一步的人工修改
			


Problem3：

请你根据这篇博客文章，在JoinQuant平台实现给定策略并完成回测，请给出Python代码；

请你评价这个策略，并提出进一步的参数调整检验方法。假设你是基金经理，你会如何改进此投资策略以达成更好的风险与收益，请你结合策略本身给出一份向部门领导的正式报告。
			



